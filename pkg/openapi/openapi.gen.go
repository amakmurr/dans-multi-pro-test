// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.2 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
	"github.com/getkin/kin-openapi/openapi3"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// AccessToken defines model for AccessToken.
type AccessToken struct {
	AccessToken string `json:"access_token"`
}

// DefaultErrorResponse defines model for DefaultErrorResponse.
type DefaultErrorResponse struct {
	Message string `json:"message"`
}

// Job defines model for Job.
type Job struct {
	Company     string             `json:"company"`
	CompanyLogo string             `json:"company_logo"`
	CompanyUrl  string             `json:"company_url"`
	CreatedAt   string             `json:"created_at"`
	Description string             `json:"description"`
	HowToApply  string             `json:"how_to_apply"`
	Id          openapi_types.UUID `json:"id"`
	Location    string             `json:"location"`
	Title       string             `json:"title"`
	Type        string             `json:"type"`
	Url         string             `json:"url"`
}

// Jobs defines model for Jobs.
type Jobs = []Job

// BadRequestResponse defines model for BadRequestResponse.
type BadRequestResponse = DefaultErrorResponse

// InternalServerErrorResponse defines model for InternalServerErrorResponse.
type InternalServerErrorResponse = DefaultErrorResponse

// JobDetailResponse defines model for JobDetailResponse.
type JobDetailResponse struct {
	Data Job `json:"data"`
}

// JobsResponse defines model for JobsResponse.
type JobsResponse struct {
	Data Jobs `json:"data"`
	Meta struct {
		Page int `json:"page"`
	} `json:"meta"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Data AccessToken `json:"data"`
}

// NotFoundResponse defines model for NotFoundResponse.
type NotFoundResponse = DefaultErrorResponse

// UnauthorizedResponse defines model for UnauthorizedResponse.
type UnauthorizedResponse = DefaultErrorResponse

// GetJobsParams defines parameters for GetJobs.
type GetJobsParams struct {
	// Description search terms in the jobs description
	Description *string `form:"description,omitempty" json:"description,omitempty"`

	// Location search by location
	Location *string `form:"location,omitempty" json:"location,omitempty"`

	// FullTime filter full time jobs or not
	FullTime *bool `form:"full_time,omitempty" json:"full_time,omitempty"`

	// Page number of page
	Page *int `form:"page,omitempty" json:"page,omitempty"`
}

// LoginMultipartBody defines parameters for Login.
type LoginMultipartBody struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginMultipartRequestBody defines body for Login for multipart/form-data ContentType.
type LoginMultipartRequestBody LoginMultipartBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8RX0W/bthP+Vwj+fo9arKQZtuotXdaiQTsMbYo+BIFBS2ebGUWqx1M6L9D/Phwl25JF",
	"x14KJE+JyePdd/d9R54eZO7Kylmw5GX2IBF85ayH8OONKj7Btxo8feqWeTV3lsAS/6uqyuhckXZ2cued",
	"5TWfL6FU/N//EeYyk/+bbENM2l0/uYS5qg39juhw47xpmkQW4HPUFfuUmZypQmCLQeDGLpHvLQFaZT4D",
	"3gMO3Tw3Rt1hET6AEcAHBmiv3OwSSGnzJIwVugqQdEtKoegg8is3k4yTK6cRCpndtOduE0mrCmQm3ewO",
	"coqlswASd24mioB4Nw//fCl4DlkCRTxUahEAdMkwAwvAUc7BLJJzpDJdpGMLpIzhIvlBeT64hbbPVJ+L",
	"PAfvr91fYJ9OtWHAwtfB17w2ZjXI5w9Hb11tixfrLOtIzBnBANYXq2paOtT/wMtBq3sgeuiapIsTiOyT",
	"NGJZhc0prXc7tjyhtosRpwPrMbeJjAIfBS3B+2Hv7Im3NoyF4utl5Jlrqewq4jlZ702NW7hHDWo08X0E",
	"RVBMVWAX/lZlZdjiKxTio1qJ09ciTbPz19npL+LL9W/iLD07lcnYz4DDSJyl+z4lN2X5xDPRBS/PHZYM",
	"Rda1LmJxjGvFF/VBmgzEd8JCZCNelx3KtlDaA4OybWosh9XeIacHfQ10WLWdGu2RR1CEJij9UU/VxolC",
	"VKu2iyCvUdPqM9u1CpuBQsCLmpbbX2/XTFx9vZZd77GjdndLzZKoattY23mrwZYFeamsFx9rQ1r8iU68",
	"c0bZhbgGzzW7B/Rtv5+epCcpI3UVWFVpmclXJ+nJK5nIStEyAJzcdZkvIOiU2yPU8n0hM/kOKFSGD6Aq",
	"gQC9zG4edi4WDwrzpSDA0gttBS2hfWmGLGi2/VYDMqFWhaSHFtv7biSbPTFnK9FjPxaht/0f3M+1IUDB",
	"D4wgXXb5OBTW0Z5AbDtl21ikmXMGlI2FsnU5AxRuLsLbH3febY38bseI22Q4CZ+l6T4hb+wmg+moSeR5",
	"enr4UPQxaxL58zERH5uC+00UZNZvn5tbTtHXZalwtTvSdPMQqQXrU965mbxlb0HekwddNAc03s66h4TO",
	"M2a4sgJF3ERbhsL69m4jrKHP14H798n07QzpgcMjTka+k36U/vP0/PDh0Xz2IrrpfSvsVU4YNMPM4HxE",
	"NmFw7hgHT29csdoZ6Eq+oCuFNGHuf1pPyPsm6Ep5/93h8LHeLEYe7NpzQcojBqONZbJ1GJ+1h/ptnqLJ",
	"4RfFj4mq6RPXTv6113Yh1hkJZQvRL1JHIztjHoMwWDCxbv7gcmUE2HuNzpbMWje1hKc3m0z46TBL5yn7",
	"NU1TyTrqAuy6ujBGcEywxDN8mK9N+Au2qJwOvruLImAbPwMX7V32yEHWZnPb/BsAAP//hxJSHwARAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
