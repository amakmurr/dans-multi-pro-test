// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.2 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
	"github.com/getkin/kin-openapi/openapi3"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// AccessToken defines model for AccessToken.
type AccessToken struct {
	AccessToken string `json:"access_token"`
}

// DefaultErrorResponse defines model for DefaultErrorResponse.
type DefaultErrorResponse struct {
	Message string `json:"message"`
}

// Job defines model for Job.
type Job struct {
	Company     string             `json:"company"`
	CompanyLogo string             `json:"company_logo"`
	CompanyUrl  string             `json:"company_url"`
	CreatedAt   string             `json:"created_at"`
	Description string             `json:"description"`
	HowToApply  string             `json:"how_to_apply"`
	Id          openapi_types.UUID `json:"id"`
	Location    string             `json:"location"`
	Title       string             `json:"title"`
	Type        string             `json:"type"`
	Url         string             `json:"url"`
}

// Jobs defines model for Jobs.
type Jobs = []Job

// BadRequestResponse defines model for BadRequestResponse.
type BadRequestResponse = DefaultErrorResponse

// InternalServerErrorResponse defines model for InternalServerErrorResponse.
type InternalServerErrorResponse = DefaultErrorResponse

// JobDetailResponse defines model for JobDetailResponse.
type JobDetailResponse struct {
	Data Job `json:"data"`
}

// JobsResponse defines model for JobsResponse.
type JobsResponse struct {
	Data Jobs `json:"data"`
	Meta *struct {
		Page int `json:"page"`
	} `json:"meta,omitempty"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Data AccessToken `json:"data"`
}

// NotFoundResponse defines model for NotFoundResponse.
type NotFoundResponse = DefaultErrorResponse

// UnauthorizedResponse defines model for UnauthorizedResponse.
type UnauthorizedResponse = DefaultErrorResponse

// GetJobsParams defines parameters for GetJobs.
type GetJobsParams struct {
	// Description search terms in the jobs description
	Description *string `form:"description,omitempty" json:"description,omitempty"`

	// Location search by location
	Location *string `form:"location,omitempty" json:"location,omitempty"`

	// FullTime filter full time jobs or not
	FullTime *bool `form:"full_time,omitempty" json:"full_time,omitempty"`

	// Page number of page
	Page *int `form:"page,omitempty" json:"page,omitempty"`
}

// LoginMultipartBody defines parameters for Login.
type LoginMultipartBody struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginMultipartRequestBody defines body for Login for multipart/form-data ContentType.
type LoginMultipartRequestBody LoginMultipartBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8RXUW/bNhD+KwS3Ry1W0gxb9ZYua9GgHYY2RR+CwKCls82MItXjKZ0X6L8PR8m2ZNFx",
	"mgDJU2LyePfdfd+RpzuZu7JyFix5md1JBF856yH8eKOKT/CtBk+fumVezZ0lsMT/qqoyOleknZ3ceGd5",
	"zedLKBX/9zPCXGbyp8k2xKTd9ZNzmKva0J+IDjfOm6ZJZAE+R12xT5nJmSoEthgEbuwS+d4SoFXmM+At",
	"4NDNc2PUHRbhAxgBfGCA9sLNzoGUNo/CWKGrAEm3pBSKDiK/cDPJOLlyGqGQ2VV77jqRtKpAZtLNbiCn",
	"WDoLIHHjZqIIiHfz8M+XgueQJVDEQ6UWAUCXDDOwABzlHMwiOT+hMsoYro4f1OWDW2j7TIU5y3Pw/tL9",
	"A/bxmRgGLHwdfM1rY1aDfP5y9NbVtnixlrKOxJwRDGB9saqmpUP9H7wctLoHooeuSbo4gcg+SSOWVdic",
	"0nq3Y8sTarsYcTqwHnObyCjwUdASvB82zZ54a8NYKL5XRp65lsquIp6T9d7UuIW716BGE99HUATFVAV2",
	"4V9VVoYtvkIhPqqVOH4t0jQ7fZ0d/ya+XP4hTtKTY5mM/Qw4jMRZuu9TclOWTzwTXfDy3GHJUGRd6yIW",
	"x7hWfFEfpMlAfCcsRDbiddmhbAulPTAo26bGcljtHXJ60NdAh1XbqdEeeQRFaILSP+iN2jhRiGrVdhHk",
	"NWpafWa7VmEzUAh4VtNy++vtmomLr5ey6z121O5uqVkSVW0baztvNdiyIM+V9eJjbUiLv9GJd84ouxCX",
	"4Llmt4C+7ffjo/QoZaSuAqsqLTP56ig9eiUTWSlaBoCTmy7zBQSdcnuEWr4vZCbfAYXK8AFUJRCgl9nV",
	"3c7F4kFhvhQEWHqhraAltC/NkAXNtt9qQCbUqpD00GJ7341ksyfmbCV67Mci9LZ/wP1cGwIU/MAI0mWX",
	"j0NhHe0JxLZTto1FmjlnQNlYKFuXM0Dh5iI8+nHn3dbI73Z+uE6GI/BJmu4T8sZuMhiLmkSepseHD0Uf",
	"syaRvz4k4n3jb7+Jgsz67XN1zSn6uiwVrnZHmjA+JJLUgvUpb9xMXrO3IO/JnS6aAxpvh9xDQufhMlxZ",
	"gSJuoi1DYX17txHW0OfrwP37aPp2pvPA4QNORj6Qnkr/aXp6+PBoPnsR3fQ+EvYqJwyaYWZwPiKbMDh3",
	"jIOnN65Y7Qx0JV/QlUKaMPe/rCfkfRN0pbz/7nD4WG8WIw927bkg5QMGo41lsnUYn7WH+m0eo8nhF8XT",
	"RNX0iWsn/9pruxDrjISyhegXqaORnTGPQRgsmFg3f3C5MgLsrUZnS2atm1rC05tNJvx0mKXzlP2epqlk",
	"HXUBdl2dGSM4JljiGT7M1yb8BVtUTgff3UURsI2fgbP2LrvnIGuzuW7+DwAA///atKV9+RAAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
