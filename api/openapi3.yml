openapi: "3.0.3"
info:
  version: 1.0.0
  title: Dans Multi Pro Golang Test
servers:
  - url: http://localhost:8000
    description: Local environment

tags:
  - name: auth
    description: All authenticated related endpoint
  - name: job
    description: All job related endpoint

paths:
  /login:
    post:
      summary: login using username and password
      operationId: Login
      tags:
        - auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "200":
          $ref: "#/components/responses/LoginResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
  /jobs:
    get:
      summary: get all jobs data
      operationId: GetJobs
      tags:
        - job
      security:
        - bearerAuth: [ ]
      parameters:
        - name: description
          in: query
          description: search terms in the jobs description
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: search by location
          required: false
          schema:
            type: string
        - name: full_time
          in: query
          description: filter full time jobs or not
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: integer
      responses:
        "200":
          $ref: "#/components/responses/JobsResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
  /jobs/{id}:
    get:
      summary: get job detail data
      operationId: GetJobDetail
      tags:
        - job
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          $ref: "#/components/responses/JobDetailResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"

components:
  schemas:
    DefaultErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    AccessToken:
      type: object
      required:
        - access_token
      properties:
        access_token:
          type: string
    Job:
      type: object
      required:
        - id
        - type
        - url
        - created_at
        - company
        - company_url
        - company_logo
        - location
        - title
        - description
        - how_to_apply
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        url:
          type: string
        created_at:
          type: string
          example: Wed May 19 00:49:17 UTC 2021
        company:
          type: string
        company_url:
          type: string
        company_logo:
          type: string
        location:
          type: string
        title:
          type: string
        description:
          type: string
        how_to_apply:
          type: string
    Jobs:
      type: array
      items:
        $ref: "#/components/schemas/Job"
  responses:
    BadRequestResponse:
      description: "bad request response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DefaultErrorResponse"
    UnauthorizedResponse:
      description: "unauthorized response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DefaultErrorResponse"
    NotFoundResponse:
      description: "not found response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DefaultErrorResponse"
    InternalServerErrorResponse:
      description: "internal server error response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DefaultErrorResponse"
    LoginResponse:
      description: "login successfully response"
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: "#/components/schemas/AccessToken"
    JobsResponse:
      description: "get all jobs response"
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - meta
            properties:
              data:
                $ref: "#/components/schemas/Jobs"
              meta:
                type: object
                required:
                  - page
                properties:
                  page:
                    type: integer
    JobDetailResponse:
      description: "get job detail response"
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: "#/components/schemas/Job"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
